#!/usr/bin/env ts-node

/**
 * Test script to verify template engine CSS application
 */

import { TemplateEngine } from '../services/templateEngine';

// Mock receipt data for testing
const mockReceiptData = {
  saleId: 'TEST-001',
  items: [
    {
      product: {
        id: '1',
        name: 'Test Product',
        price: 1000,
      },
      quantity: 1,
      discount: 0,
      subtotal: 1000,
    },
  ],
  total: 1000,
  paymentMethod: 'cash',
  note: 'Test note',
  date: new Date(),
};

// Mock shop settings
const mockShopSettings = {
  shopName: 'Test Shop',
  address: 'Test Address',
  phone: '+95 9 123 456 789',
  thankYouMessage: 'Thank you!',
  receiptFooter: 'Visit again!',
  receiptTemplate: 'classic',
};

// Mock translations
const mockTranslations = {
  mobilePOS: 'Mobile POS',
  receiptNumber: 'Receipt #',
  date: 'Date',
  paymentMethod: 'Payment',
  total: 'TOTAL',
  discount: 'Discount',
  saleNote: 'Note',
  thankYou: 'Thank you!',
  generatedBy: 'Generated by Mobile POS',
};

async function testTemplateEngine() {
  console.log('🧪 Testing Template Engine CSS Application...\n');

  try {
    const templateEngine = new TemplateEngine();

    // Build template context
    const context = templateEngine.buildTemplateContext(
      mockShopSettings,
      mockReceiptData,
      mockTranslations
    );

    // Generate receipt HTML
    const receiptHtml = await templateEngine.renderReceipt('classic', context);

    console.log('✅ Receipt HTML generated');

    // Check if CSS is being applied
    const checks = [
      {
        name: 'Contains CSS styles',
        test: receiptHtml.includes('<style>'),
        result: receiptHtml.includes('<style>') ? '✅' : '❌',
      },
      {
        name: 'Contains black background',
        test: receiptHtml.includes('background: #000'),
        result: receiptHtml.includes('background: #000') ? '✅' : '❌',
      },
      {
        name: 'Contains white text',
        test: receiptHtml.includes('color: #fff'),
        result: receiptHtml.includes('color: #fff') ? '✅' : '❌',
      },
      {
        name: 'Contains responsive media queries',
        test: receiptHtml.includes('@media'),
        result: receiptHtml.includes('@media') ? '✅' : '❌',
      },
      {
        name: 'Contains receipt content',
        test: receiptHtml.includes('TEST-001'),
        result: receiptHtml.includes('TEST-001') ? '✅' : '❌',
      },
    ];

    console.log('\n📋 CSS Application Check:');
    checks.forEach((check) => {
      console.log(`${check.result} ${check.name}`);
    });

    // Show first 500 characters of HTML for debugging
    console.log('\n📄 HTML Preview (first 500 chars):');
    console.log(receiptHtml.substring(0, 500) + '...');

    // Check if all tests pass
    const allPassed = checks.every((check) => check.test);

    if (allPassed) {
      console.log(
        '\n🎉 All CSS tests passed! Template engine is working correctly.'
      );
    } else {
      console.log(
        '\n⚠️  Some CSS tests failed. There might be an issue with template rendering.'
      );
    }
  } catch (error) {
    console.error('❌ Error testing template engine:', error);
    process.exit(1);
  }
}

// Run the test
testTemplateEngine()
  .then(() => {
    console.log('\n✨ Template engine test completed!');
  })
  .catch((error) => {
    console.error('💥 Test failed:', error);
    process.exit(1);
  });
